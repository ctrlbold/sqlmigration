<?xml version="1.0" encoding="utf-8" ?>
<Types>
<!--Microsoft.SqlServer.Management.Smo.Database -->
<Type>
<Name>Microsoft.SqlServer.Management.Smo.Database</Name>
<Members>
<ScriptMethod>
<Name>Query</Name>
<Script>
param (
    $Query,
    $AllTables = $false
)

if ($AllTables) { ($this.ExecuteWithResults($Query)).Tables }
else { ($this.ExecuteWithResults($Query)).Tables[0] }
</Script>
</ScriptMethod>
<ScriptMethod>
<Name>Invoke</Name>
<Script>
param (
    $Command
)
$this.ExecuteNonQuery($Command)
</Script>
</ScriptMethod>
</Members>
</Type>

<!--Microsoft.SqlServer.Management.Smo.Server -->
<Type>
<Name>Microsoft.SqlServer.Management.Smo.Server</Name>
<Members>
<ScriptMethod>
<Name>Query</Name>
<Script>
param (
    [string]$Query,
    [string]$Database,
    [bool]$AllTables
)

$sqlConnection = $this.ConnectionContext.SqlConnectionObject
if ($sqlConnection.State -ne 'Open') {
    $sqlConnection.Open()
}
if ($Database -and $Database -ne $sqlConnection.Database) {
    $sqlConnection.ChangeDatabase($Database)
}
$sqlCommand = New-Object Microsoft.Data.SqlClient.SqlCommand($Query, $sqlConnection)
$sqlDataAdapter = New-Object Microsoft.Data.SqlClient.SqlDataAdapter($sqlCommand)
$dataSet = New-Object System.Data.DataSet
[void]$sqlDataAdapter.Fill($dataSet)
if ($AllTables) {
    $dataSet.Tables
} else {
    $dataSet.Tables[0]
}
</Script>
</ScriptMethod>
<ScriptMethod>
<Name>Invoke</Name>
<Script>
param (
    [string]$Command,
    [string]$Database
)

$sqlConnection = $this.ConnectionContext.SqlConnectionObject
if ($sqlConnection.State -ne 'Open') {
    $sqlConnection.Open()
}
if ($Database -and $Database -ne $sqlConnection.Database) {
    $sqlConnection.ChangeDatabase($Database)
}
$sqlCommand = New-Object Microsoft.Data.SqlClient.SqlCommand($Query, $sqlConnection)
$sqlCommand.ExecuteNonQuery()
</Script>
</ScriptMethod>
</Members>
</Type>
<Type>
<Name>Dataplat.Dbatools.dbaSystem.DbatoolsException</Name>
<Members>
<MemberSet>
<Name>PSStandardMembers</Name>
<Members>
<NoteProperty>
<Name>SerializationDepth</Name>
<Value>2</Value>
</NoteProperty>
</Members>
</MemberSet>
</Members>
</Type>
<Type>
<Name>Dataplat.Dbatools.dbaSystem.DbatoolsExceptionRecord</Name>
<Members>
<MemberSet>
<Name>PSStandardMembers</Name>
<Members>
<NoteProperty>
<Name>SerializationDepth</Name>
<Value>2</Value>
</NoteProperty>
</Members>
</MemberSet>
</Members>
</Type>
</Types>